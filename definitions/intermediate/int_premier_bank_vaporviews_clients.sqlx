config {
  type: "table",
  // Using the 'dataset_id_curated' variable from your dataform.json as the intermediate schema.
  // Dataform will resolve this to "aef_curated_sample_dataset" in the "pso-hackathon" project.
  schema: "${dataform.projectConfig.vars.dataset_id_curated}",
  tags: ["vaporviews_analysis"],
  description: "Cleaned VaporViews client data, joined with Premier Bank client list to identify matches."
  // The 'database' (BigQuery project) will default to "pso-hackathon" as specified
  // in your dataform.json's 'defaultDatabase' or could be explicitly set using
  // database: "${dataform.projectConfig.vars.dataset_projectid_curated}"
  // but it's redundant here as they are the same.
}

WITH cleaned_bank_info AS (
  SELECT
    uuid,
    CAST(account_number AS STRING) AS account_number,
    CAST(age AS INTEGER) AS age,
    CAST(Experience AS INTEGER) AS Experience,
    CAST(Income AS INTEGER) AS Income, -- Or CAST(Income AS FLOAT64) if it has decimals
    CAST(Mortgage AS INTEGER) AS Mortgage, -- Or CAST(Mortgage AS FLOAT64) if it has decimals
    ZIP_Code,
    Family,
    Education,
    Job,
    Marital,
    Housing,
    -- Convert string 'True'/'False' to BOOLEAN, defaulting to FALSE for NULLs/empty/other strings
    CASE WHEN UPPER(TRIM(COALESCE(Personal_Loan, 'FALSE'))) = 'TRUE' THEN TRUE ELSE FALSE END AS Personal_Loan,
    CASE WHEN UPPER(TRIM(COALESCE(Securities_Account, 'FALSE'))) = 'TRUE' THEN TRUE ELSE FALSE END AS Securities_Account,
    CASE WHEN UPPER(TRIM(COALESCE(CD_Account, 'FALSE'))) = 'TRUE' THEN TRUE ELSE FALSE END AS CD_Account,
    CASE WHEN UPPER(TRIM(COALESCE(Online, 'FALSE'))) = 'TRUE' THEN TRUE ELSE FALSE END AS Online,
    CASE WHEN UPPER(TRIM(COALESCE(Credit_Card, 'FALSE'))) = 'TRUE' THEN TRUE ELSE FALSE END AS Credit_Card,
    Loan, -- Assuming this is already in a suitable format or doesn't need transformation
    Contact, -- Assuming this is already in a suitable format or doesn't need transformation
    Name,
    Last_Name
  FROM
    ${ref("stg_bank_info")}
    -- If stg_bank_info is not a Dataform table, replace with:
    -- `${dataform.projectConfig.vars.dataset_projectid_landing}.${dataform.projectConfig.vars.dataset_id_landing}.bank_info_raw`
    -- (assuming bank_info_raw is the raw table name in your landing dataset)
),

premier_clients AS (
  SELECT DISTINCT
    account_number
  FROM
    ${ref("stg_raw_transactions")}
    -- If stg_raw_transactions is not a Dataform table, replace with:
    -- `${dataform.projectConfig.vars.dataset_projectid_landing}.${dataform.projectConfig.vars.dataset_id_landing}.raw_transactions_raw`
    -- (assuming raw_transactions_raw is the raw table name in your landing dataset)
)

SELECT
  cbi.*,
  pc.account_number IS NOT NULL AS is_premier_client
FROM
  cleaned_bank_info AS cbi
LEFT JOIN
  premier_clients AS pc
  ON cbi.account_number = CAST(pc.account_number AS STRING)